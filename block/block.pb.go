// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block/block.proto

/*
Package block is a generated protocol buffer package.

It is generated from these files:
	block/block.proto

It has these top-level messages:
	Signature
	Transaction
	Block
	PublicKey
	PrivateKey
*/
package block

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction_Type int32

const (
	Transaction_Raw       Transaction_Type = 0
	Transaction_PublicKey Transaction_Type = 1
)

var Transaction_Type_name = map[int32]string{
	0: "Raw",
	1: "PublicKey",
}
var Transaction_Type_value = map[string]int32{
	"Raw":       0,
	"PublicKey": 1,
}

func (x Transaction_Type) String() string {
	return proto.EnumName(Transaction_Type_name, int32(x))
}
func (Transaction_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// metadat about a block signature
type Signature struct {
	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Hash       []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	SignatureA []byte `protobuf:"bytes,3,opt,name=signatureA,proto3" json:"signatureA,omitempty"`
	SignatureB []byte `protobuf:"bytes,4,opt,name=signatureB,proto3" json:"signatureB,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Signature) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Signature) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Signature) GetSignatureA() []byte {
	if m != nil {
		return m.SignatureA
	}
	return nil
}

func (m *Signature) GetSignatureB() []byte {
	if m != nil {
		return m.SignatureB
	}
	return nil
}

type Transaction struct {
	Signature *Signature       `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	Type      Transaction_Type `protobuf:"varint,2,opt,name=type,enum=block.Transaction_Type" json:"type,omitempty"`
	Payload   []byte           `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Transaction) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Transaction) GetType() Transaction_Type {
	if m != nil {
		return m.Type
	}
	return Transaction_Raw
}

func (m *Transaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Metadata about a block
type Block struct {
	Timestamp    int64          `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Parent       []byte         `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Hash         []byte         `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,4,rep,name=transactions" json:"transactions,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetParent() []byte {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Block) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type PublicKey struct {
	X    []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y    []byte `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Hint string `protobuf:"bytes,3,opt,name=hint" json:"hint,omitempty"`
}

func (m *PublicKey) Reset()                    { *m = PublicKey{} }
func (m *PublicKey) String() string            { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()               {}
func (*PublicKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PublicKey) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *PublicKey) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *PublicKey) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

type PrivateKey struct {
	Public *PublicKey `protobuf:"bytes,1,opt,name=public" json:"public,omitempty"`
	D      []byte     `protobuf:"bytes,2,opt,name=d,proto3" json:"d,omitempty"`
}

func (m *PrivateKey) Reset()                    { *m = PrivateKey{} }
func (m *PrivateKey) String() string            { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()               {}
func (*PrivateKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PrivateKey) GetPublic() *PublicKey {
	if m != nil {
		return m.Public
	}
	return nil
}

func (m *PrivateKey) GetD() []byte {
	if m != nil {
		return m.D
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "block.Signature")
	proto.RegisterType((*Transaction)(nil), "block.Transaction")
	proto.RegisterType((*Block)(nil), "block.Block")
	proto.RegisterType((*PublicKey)(nil), "block.PublicKey")
	proto.RegisterType((*PrivateKey)(nil), "block.PrivateKey")
	proto.RegisterEnum("block.Transaction_Type", Transaction_Type_name, Transaction_Type_value)
}

func init() { proto.RegisterFile("block/block.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x41, 0x4f, 0x83, 0x30,
	0x18, 0xb5, 0xc2, 0xb6, 0xf0, 0x0d, 0xcd, 0xec, 0x41, 0x39, 0x98, 0x65, 0xc1, 0x98, 0x90, 0x98,
	0xb0, 0x64, 0x26, 0x5e, 0x3c, 0x49, 0xbc, 0x79, 0x59, 0xea, 0x4e, 0xde, 0x0a, 0x34, 0xa3, 0x11,
	0x68, 0x03, 0x9d, 0x8e, 0x83, 0x3f, 0xc0, 0xff, 0xe1, 0x0f, 0x35, 0x74, 0x0c, 0xd8, 0x3c, 0x78,
	0x21, 0x7d, 0x7d, 0xaf, 0xef, 0x7b, 0xbc, 0x7c, 0x70, 0x11, 0xa6, 0x22, 0x7a, 0x9f, 0xeb, 0xaf,
	0x2f, 0x0b, 0xa1, 0x04, 0x1e, 0x68, 0xe0, 0x7e, 0x81, 0xf5, 0xca, 0xd7, 0x39, 0x55, 0x9b, 0x82,
	0xe1, 0x6b, 0xb0, 0x14, 0xcf, 0x58, 0xa9, 0x68, 0x26, 0x1d, 0x34, 0x43, 0x9e, 0x41, 0xba, 0x0b,
	0x8c, 0xc1, 0x4c, 0x68, 0x99, 0x38, 0xa7, 0x33, 0xe4, 0xd9, 0x44, 0x9f, 0xf1, 0x14, 0xa0, 0xdc,
	0x3f, 0x7f, 0x72, 0x0c, 0xcd, 0xf4, 0x6e, 0x0e, 0xf8, 0xc0, 0x31, 0x8f, 0xf8, 0xc0, 0xfd, 0x41,
	0x30, 0x5e, 0x15, 0x34, 0x2f, 0x69, 0xa4, 0xb8, 0xc8, 0xb1, 0x0f, 0x56, 0xcb, 0xea, 0x04, 0xe3,
	0xc5, 0xc4, 0xdf, 0xc5, 0x6e, 0x63, 0x92, 0x4e, 0x82, 0xef, 0xc0, 0x54, 0x95, 0x64, 0x3a, 0xd3,
	0xf9, 0xe2, 0xaa, 0x91, 0xf6, 0x1c, 0xfd, 0x55, 0x25, 0x19, 0xd1, 0x22, 0xec, 0xc0, 0x48, 0xd2,
	0x2a, 0x15, 0x34, 0x6e, 0x92, 0xee, 0xa1, 0x3b, 0x05, 0xb3, 0xd6, 0xe1, 0x11, 0x18, 0x84, 0x7e,
	0x4e, 0x4e, 0xf0, 0x19, 0x58, 0xcb, 0x4d, 0x98, 0xf2, 0xe8, 0x85, 0x55, 0x13, 0xe4, 0x7e, 0x23,
	0x18, 0x04, 0xb5, 0xf5, 0x3f, 0x15, 0x5d, 0xc2, 0x50, 0xd2, 0x82, 0xe5, 0xaa, 0x29, 0xa9, 0x41,
	0x6d, 0x75, 0x46, 0xaf, 0xba, 0x07, 0xb0, 0x55, 0x97, 0xb3, 0x74, 0xcc, 0x99, 0xe1, 0x8d, 0x17,
	0xf8, 0xef, 0x2f, 0x90, 0x03, 0x9d, 0xfb, 0xd8, 0x8b, 0x86, 0x6d, 0x40, 0x5b, 0x1d, 0xc3, 0x26,
	0x68, 0x5b, 0xa3, 0xaa, 0x99, 0x8c, 0x2a, 0x3d, 0x94, 0xe7, 0x4a, 0x0f, 0xb5, 0x88, 0x3e, 0xbb,
	0xcf, 0x00, 0xcb, 0x82, 0x7f, 0x50, 0xc5, 0xea, 0xd7, 0x1e, 0x0c, 0xa5, 0xb6, 0x3a, 0xaa, 0xba,
	0xf5, 0x27, 0x0d, 0x5f, 0x3b, 0xc7, 0x7b, 0xe7, 0x38, 0xb8, 0x7d, 0xbb, 0x59, 0x73, 0x95, 0x6c,
	0x42, 0x3f, 0x12, 0xd9, 0x9c, 0xa5, 0x5c, 0xa8, 0x84, 0xc5, 0x2c, 0xa3, 0xf9, 0x3c, 0x61, 0x54,
	0x25, 0xbb, 0x45, 0x0b, 0x87, 0x7a, 0xd3, 0xee, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x22,
	0x61, 0xc8, 0x7e, 0x02, 0x00, 0x00,
}
