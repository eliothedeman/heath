// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block/block.proto

/*
Package block is a generated protocol buffer package.

It is generated from these files:
	block/block.proto

It has these top-level messages:
	Signature
	Transaction
	Petition
	Block
	PublicKey
	PrivateKey
*/
package block

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// metadat about a block signature
type Signature struct {
	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Hash       []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	SignatureA []byte `protobuf:"bytes,3,opt,name=signatureA,proto3" json:"signatureA,omitempty"`
	SignatureB []byte `protobuf:"bytes,4,opt,name=signatureB,proto3" json:"signatureB,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Signature) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Signature) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Signature) GetSignatureA() []byte {
	if m != nil {
		return m.SignatureA
	}
	return nil
}

func (m *Signature) GetSignatureB() []byte {
	if m != nil {
		return m.SignatureB
	}
	return nil
}

type Transaction struct {
	Signature *Signature `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Transaction_Raw
	//	*Transaction_NewPublicKey
	Payload isTransaction_Payload `protobuf_oneof:"payload"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isTransaction_Payload interface {
	isTransaction_Payload()
}

type Transaction_Raw struct {
	Raw []byte `protobuf:"bytes,2,opt,name=raw,proto3,oneof"`
}
type Transaction_NewPublicKey struct {
	NewPublicKey *PublicKey `protobuf:"bytes,3,opt,name=newPublicKey,oneof"`
}

func (*Transaction_Raw) isTransaction_Payload()          {}
func (*Transaction_NewPublicKey) isTransaction_Payload() {}

func (m *Transaction) GetPayload() isTransaction_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Transaction) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Transaction) GetRaw() []byte {
	if x, ok := m.GetPayload().(*Transaction_Raw); ok {
		return x.Raw
	}
	return nil
}

func (m *Transaction) GetNewPublicKey() *PublicKey {
	if x, ok := m.GetPayload().(*Transaction_NewPublicKey); ok {
		return x.NewPublicKey
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Transaction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Transaction_OneofMarshaler, _Transaction_OneofUnmarshaler, _Transaction_OneofSizer, []interface{}{
		(*Transaction_Raw)(nil),
		(*Transaction_NewPublicKey)(nil),
	}
}

func _Transaction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Transaction)
	// payload
	switch x := m.Payload.(type) {
	case *Transaction_Raw:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Raw)
	case *Transaction_NewPublicKey:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NewPublicKey); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Transaction.Payload has unexpected type %T", x)
	}
	return nil
}

func _Transaction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Transaction)
	switch tag {
	case 2: // payload.raw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Payload = &Transaction_Raw{x}
		return true, err
	case 3: // payload.newPublicKey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PublicKey)
		err := b.DecodeMessage(msg)
		m.Payload = &Transaction_NewPublicKey{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Transaction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Transaction)
	// payload
	switch x := m.Payload.(type) {
	case *Transaction_Raw:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Raw)))
		n += len(x.Raw)
	case *Transaction_NewPublicKey:
		s := proto.Size(x.NewPublicKey)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Petition struct {
	Hash       []byte       `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Signatures []*Signature `protobuf:"bytes,2,rep,name=signatures" json:"signatures,omitempty"`
}

func (m *Petition) Reset()                    { *m = Petition{} }
func (m *Petition) String() string            { return proto.CompactTextString(m) }
func (*Petition) ProtoMessage()               {}
func (*Petition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Petition) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Petition) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// Metadata about a block
type Block struct {
	Timestamp    int64          `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Parent       []byte         `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Petition     *Petition      `protobuf:"bytes,3,opt,name=petition" json:"petition,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,4,rep,name=transactions" json:"transactions,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetParent() []byte {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Block) GetPetition() *Petition {
	if m != nil {
		return m.Petition
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type PublicKey struct {
	X    []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y    []byte `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Hint string `protobuf:"bytes,3,opt,name=hint" json:"hint,omitempty"`
}

func (m *PublicKey) Reset()                    { *m = PublicKey{} }
func (m *PublicKey) String() string            { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()               {}
func (*PublicKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PublicKey) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *PublicKey) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *PublicKey) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

type PrivateKey struct {
	Public *PublicKey `protobuf:"bytes,1,opt,name=public" json:"public,omitempty"`
	D      []byte     `protobuf:"bytes,2,opt,name=d,proto3" json:"d,omitempty"`
}

func (m *PrivateKey) Reset()                    { *m = PrivateKey{} }
func (m *PrivateKey) String() string            { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()               {}
func (*PrivateKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PrivateKey) GetPublic() *PublicKey {
	if m != nil {
		return m.Public
	}
	return nil
}

func (m *PrivateKey) GetD() []byte {
	if m != nil {
		return m.D
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "block.Signature")
	proto.RegisterType((*Transaction)(nil), "block.Transaction")
	proto.RegisterType((*Petition)(nil), "block.Petition")
	proto.RegisterType((*Block)(nil), "block.Block")
	proto.RegisterType((*PublicKey)(nil), "block.PublicKey")
	proto.RegisterType((*PrivateKey)(nil), "block.PrivateKey")
}

func init() { proto.RegisterFile("block/block.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x6a, 0xe3, 0x30,
	0x10, 0xc6, 0xa3, 0x38, 0xc9, 0xc6, 0x93, 0xc0, 0xee, 0xea, 0xb0, 0xf8, 0xb0, 0x94, 0xe0, 0x52,
	0x08, 0x14, 0x9c, 0xd2, 0x42, 0x2f, 0x3d, 0xd5, 0xf4, 0x10, 0xe8, 0xc5, 0xa8, 0x3d, 0xf5, 0x26,
	0xdb, 0x22, 0x16, 0xb5, 0x25, 0x63, 0x2b, 0x4d, 0x7c, 0xe8, 0x5b, 0xf4, 0x09, 0xfa, 0xa4, 0xc5,
	0x8a, 0xfc, 0x27, 0xa1, 0xd0, 0x8b, 0xd1, 0xcc, 0x37, 0x1a, 0x7e, 0xdf, 0x67, 0xc1, 0xdf, 0x30,
	0x95, 0xd1, 0xeb, 0x4a, 0x7f, 0xbd, 0xbc, 0x90, 0x4a, 0xe2, 0xb1, 0x2e, 0xdc, 0x77, 0xb0, 0x9f,
	0xf8, 0x46, 0x50, 0xb5, 0x2d, 0x18, 0xfe, 0x0f, 0xb6, 0xe2, 0x19, 0x2b, 0x15, 0xcd, 0x72, 0x07,
	0x2d, 0xd0, 0xd2, 0x22, 0x5d, 0x03, 0x63, 0x18, 0x25, 0xb4, 0x4c, 0x9c, 0xe1, 0x02, 0x2d, 0xe7,
	0x44, 0x9f, 0xf1, 0x19, 0x40, 0xd9, 0x5c, 0xbf, 0x77, 0x2c, 0xad, 0xf4, 0x3a, 0x47, 0xba, 0xef,
	0x8c, 0x4e, 0x74, 0xdf, 0xfd, 0x40, 0x30, 0x7b, 0x2e, 0xa8, 0x28, 0x69, 0xa4, 0xb8, 0x14, 0xd8,
	0x03, 0xbb, 0x55, 0x35, 0xc1, 0xec, 0xfa, 0x8f, 0x77, 0xc0, 0x6e, 0x31, 0x49, 0x37, 0x82, 0x31,
	0x58, 0x05, 0xdd, 0x1d, 0x90, 0xd6, 0x03, 0x52, 0x17, 0xf8, 0x16, 0xe6, 0x82, 0xed, 0x82, 0x6d,
	0x98, 0xf2, 0xe8, 0x91, 0x55, 0x9a, 0xaa, 0x5b, 0xd3, 0xf6, 0xd7, 0x03, 0x72, 0x34, 0xe7, 0xdb,
	0xf0, 0x2b, 0xa7, 0x55, 0x2a, 0x69, 0xec, 0x06, 0x30, 0x0d, 0x98, 0xe2, 0x1a, 0xa9, 0xb1, 0x8d,
	0x7a, 0xb6, 0xaf, 0x7a, 0xb6, 0x4a, 0x67, 0xb8, 0xb0, 0xbe, 0xe5, 0xec, 0xcd, 0xb8, 0x9f, 0x08,
	0xc6, 0x7e, 0xad, 0xff, 0x10, 0xf2, 0x3f, 0x98, 0xe4, 0xb4, 0x60, 0x42, 0x99, 0x98, 0x4d, 0x85,
	0x2f, 0x61, 0x9a, 0x1b, 0x22, 0x63, 0xe8, 0x77, 0x63, 0xc8, 0xb4, 0x49, 0x3b, 0x50, 0x27, 0xa0,
	0xba, 0x50, 0x4b, 0x67, 0xa4, 0x01, 0xb1, 0xb9, 0xd0, 0xcb, 0x9b, 0x1c, 0xcd, 0xb9, 0x77, 0x60,
	0xb7, 0x71, 0xe0, 0x39, 0xa0, 0xbd, 0x31, 0x8d, 0xf6, 0x75, 0x55, 0x19, 0x24, 0x54, 0xe9, 0x4c,
	0xb8, 0x50, 0x9a, 0xc4, 0x26, 0xfa, 0xec, 0x3e, 0x00, 0x04, 0x05, 0x7f, 0xa3, 0x8a, 0xd5, 0xb7,
	0x97, 0x30, 0xc9, 0xf5, 0xaa, 0x93, 0xbf, 0xd8, 0xee, 0x27, 0x46, 0xaf, 0x37, 0xc7, 0xcd, 0xe6,
	0xd8, 0xbf, 0x78, 0x39, 0xdf, 0x70, 0x95, 0x6c, 0x43, 0x2f, 0x92, 0xd9, 0x8a, 0xa5, 0x5c, 0xaa,
	0x84, 0xc5, 0x2c, 0xa3, 0x62, 0x95, 0x30, 0xaa, 0x92, 0xc3, 0x1b, 0x0e, 0x27, 0xfa, 0x11, 0xdf,
	0x7c, 0x05, 0x00, 0x00, 0xff, 0xff, 0x03, 0x1c, 0xc0, 0x11, 0xd9, 0x02, 0x00, 0x00,
}
